{
  "wave-on-a-string.title": {
    "value": "Wave on a String"
  },
  "rulers": {
    "value": "Rulers"
  },
  "timer": {
    "value": "Stopwatch"
  },
  "amplitude": {
    "value": "Amplitude"
  },
  "frequency": {
    "value": "Frequency"
  },
  "pulseWidth": {
    "value": "Pulse Width"
  },
  "damping": {
    "value": "Damping"
  },
  "tension": {
    "value": "Tension"
  },
  "low": {
    "value": "Low"
  },
  "high": {
    "value": "High"
  },
  "manual": {
    "value": "Manual"
  },
  "oscillate": {
    "value": "Oscillate"
  },
  "pulse": {
    "value": "Pulse"
  },
  "restart": {
    "value": "Restart String"
  },
  "fixedEnd": {
    "value": "Fixed End"
  },
  "looseEnd": {
    "value": "Loose End"
  },
  "noEnd": {
    "value": "No End"
  },
  "speedNormal": {
    "value": "Normal"
  },
  "speedSlow": {
    "value": "Slow Motion"
  },
  "referenceLine": {
    "value": "Reference Line"
  },
  "unitCm": {
    "value": "cm"
  },
  "patternValueUnitHz": {
    "value": "{0} Hz"
  },
  "patternValueUnitCm": {
    "value": "{0} cm"
  },
  "patternValueUnitS": {
    "value": "{0} s"
  },
  "patternValueUnitPercentage": {
    "value": "{0}%"
  },
  "keyboardHelpDialog.stringControls": {
    "value": "String Controls"
  },
  "a11y": {
    "screenSummary": {
      "playArea": {
        "value": "Explore the physical properties of waves by manipulating a string that tightly stretches across the play area. Move the string yourself with a wrench, use a continuous oscillator, or pulse the string to generate waves.  Every wave mode provides different options to tune the strings' properties and motion, which affects the waves you create and observe. The end of the string can be fixed to the end of the play area, left loose, or removed entirely to extend infinitely."
      },
      "controlArea": {
        "value": "Several tools are available to support measurements of different properties of the resulting waves."
      },
      "interactionHint": {
        "value": "{ $mode ->\n  [manual] Move the wrench or choose another way to start making waves.\n  [oscillate] Start the oscillator or choose another way to start making waves.\n  *[pulse] Start a pulse or choose another way to start making waves.\n}"
      }
    },
    "headings": {
      "playArea": {
        "waveGeneration": {
          "value": "Wave Generation"
        },
        "activeMeasurementTools": {
          "value": "Active Measurement Tools"
        },
        "activeMeasurementToolsDescription": {
          "value": "Tools to visually measure properties of waves. Pause the sim to help make precise measurements."
        },
        "waveAndStringProperties": {
          "value": "Wave and String Properties"
        },
        "waveAndStringPropertiesDescription": {
          "value": "Controls to change the properties of the generated wave and the string."
        }
      },
      "controlArea": {
        "measurementTools": {
          "value": "Measurement Tools"
        },
        "measurementToolsDescription": {
          "value": "Tools to visually measure properties of waves. Pause the sim to help make precise measurements."
        }
      }
    },
    "valuePatterns": {
      "centimeters": {
        "value": "{ $value } centimeters"
      },
      "hertz": {
        "value": "{ $value } hertz"
      },
      "seconds": {
        "value": "{ $value } seconds"
      },
      "percentage": {
        "value": "{ $value } percent"
      }
    },
    "waveGeneration": {
      "start": {
        "value": "Currently, the { $mode ->\n  [manual] wrench clamped to the string is near the { $wrenchPosition ->\n      [bottom] bottom\n      *[middle] middle\n      [top] top\n    } of the play area\n  *[other] { $mode ->\n    [oscillate] oscillator\n    *[pulse] pulse generator\n  } is { $active ->\n    [true] generating a { $mode ->\n      [oscillate] sinusoidal wave\n      *[pulse] triangular pulse\n    } that begins with { $amplitude ->\n      [zero] zero\n      [low] low\n      [medium] medium\n      *[high] high\n    } amplitude and\n    { $mode ->\n      [oscillate] { $frequency ->\n        [zero] zero\n        [low] low\n        [medium] medium\n        *[high] high\n      } frequency\n      *[pulse] { $pulseWidth ->\n        [low] narrow\n        [medium] medium\n        *[high] wide\n      } pulse width\n    }\n    *[false] stationary \n  } in the play area\n}, and the string is { $isStill ->\n  *[true] still and flat\n  [false] in motion\n}."
      },
      "end": {
        "value": "The end of the string { $endPosition ->\n  *[fixed] is fixed to a clamp.\n  [loose] is attached to a ring that moves along a rod.\n  [no] extends out to infinity through a window outside.\n}"
      }
    },
    "waveMode": {
      "accessibleName": {
        "value": "Wave Mode"
      },
      "accessibleHelpText": {
        "value": "Create wave manually, continuously, or with individual pulses."
      },
      "manual": {
        "accessibleName": {
          "value": "Manual"
        }
      },
      "oscillate": {
        "accessibleName": {
          "value": "Oscillate"
        }
      },
      "pulse": {
        "accessibleName": {
          "value": "Pulse"
        }
      }
    },
    "endMode": {
      "accessibleName": {
        "value": "String End Type"
      },
      "accessibleHelpText": {
        "value": "Set attachment for the end of the string."
      },
      "fixedEnd": {
        "accessibleName": {
          "value": "Fixed End"
        }
      },
      "looseEnd": {
        "accessibleName": {
          "value": "Loose End"
        }
      },
      "noEnd": {
        "accessibleName": {
          "value": "No End"
        }
      }
    },
    "string": {
      "stillContextResponse": {
        "value": "String still."
      }
    },
    "wrench": {
      "accessibleName": {
        "value": "Wrench"
      },
      "accessibleHelpText": {
        "value": "Move the wrench up and down to drag the string and make a wave."
      }
    },
    "pulseGenerator": {
      "accessibleName": {
        "value": "Pulse Generator"
      },
      "accessibleHelpText": {
        "value": "Create a single triangular wave pulse along the string."
      }
    },
    "restartButton": {
      "accessibleHelpText": {
        "value": "Reset string position to still and flat."
      },
      "accessibleContextResponse": {
        "value": "String reset."
      }
    },
    "horizontalRuler": {
      "accessibleName": {
        "value": "Horizontal Ruler"
      },
      "accessibleHelpText": {
        "value": "Drag ruler to line up and visually measure wave length."
      }
    },
    "verticalRuler": {
      "accessibleName": {
        "value": "Vertical Ruler"
      },
      "accessibleHelpText": {
        "value": "Drag ruler to line up and visually measure wave amplitude."
      }
    },
    "referenceLine": {
      "accessibleName": {
        "value": "Reference Line"
      },
      "accessibleHelpText": {
        "value": "Move handle and visually line up with waves to compare amplitude changes."
      }
    },
    "amplitudeControl": {
      "accessibleHelpText": {
        "value": "Wave height from crest to trough."
      }
    },
    "frequencyControl": {
      "accessibleHelpText": {
        "value": "Wave cycles per second."
      }
    },
    "pulseWidthControl": {
      "accessibleHelpText": {
        "value": "Width of the generated pulse in seconds."
      }
    },
    "dampingControl": {
      "accessibleHelpText": {
        "value": "Amount of energy lost to the environment."
      }
    },
    "tensionControl": {
      "accessibleHelpText": {
        "value": "Amount the string is stretched."
      }
    },
    "visibilityControls": {
      "rulers": {
        "accessibleHelpText": {
          "value": "Vertical and horizontal rulers to measure distance."
        },
        "accessibleContextResponse": {
          "value": "Rulers { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      },
      "stopwatch": {
        "accessibleHelpText": {
          "value": "Stopwatch to measure elapsed time."
        },
        "accessibleContextResponse": {
          "value": "Stopwatch { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      },
      "referenceLine": {
        "accessibleHelpText": {
          "value": "Movable dashed laser line to visually line up with waves to compare amplitude changes."
        },
        "accessibleContextResponse": {
          "value": "Reference line { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      }
    },
    "keyboardHelpDialog": {
      "restartString": {
        "description": {
          "value": "Reset String with { $altOrOption } plus Shift plus R."
        }
      }
    }
  }
}
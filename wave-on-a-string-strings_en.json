{
  "wave-on-a-string.title": {
    "value": "Wave on a String"
  },
  "rulers": {
    "value": "Rulers"
  },
  "timer": {
    "value": "Stopwatch"
  },
  "amplitude": {
    "value": "Amplitude"
  },
  "frequency": {
    "value": "Frequency"
  },
  "pulseWidth": {
    "value": "Pulse Width"
  },
  "damping": {
    "value": "Damping"
  },
  "tension": {
    "value": "Tension"
  },
  "low": {
    "value": "Low"
  },
  "high": {
    "value": "High"
  },
  "manual": {
    "value": "Manual"
  },
  "oscillate": {
    "value": "Oscillate"
  },
  "pulse": {
    "value": "Pulse"
  },
  "restart": {
    "value": "Restart String"
  },
  "fixedEnd": {
    "value": "Fixed End"
  },
  "looseEnd": {
    "value": "Loose End"
  },
  "noEnd": {
    "value": "No End"
  },
  "speedNormal": {
    "value": "Normal"
  },
  "speedSlow": {
    "value": "Slow Motion"
  },
  "referenceLine": {
    "value": "Reference Line"
  },
  "unitCm": {
    "value": "cm"
  },
  "patternValueUnitHz": {
    "value": "{0} Hz"
  },
  "patternValueUnitCm": {
    "value": "{0} cm"
  },
  "patternValueUnitS": {
    "value": "{0} s"
  },
  "patternValueUnitPercentage": {
    "value": "{0}%"
  },
  "keyboardHelpDialog.stringControls": {
    "value": "String Controls"
  },
  "a11y": {
    "screenSummary": {
      "playArea": {
        "value": "Explore different ways to generate waves on a string that stretches across the play area.  The string can be attached to a wrench to move manually or to oscillators that move continuously or pulse when you choose.  Changing the way you make waves provides different properties of the waves and the string for you to tune in the control area.  Decide how the end of the string should be attached to the end of the play area or allow it to extend into infinity."
      },
      "controlArea": {
        "value": "Change the properties of the oscillators and of the string."
      },
      "currentDetails": {
        "start": {
          "value": "{ $isPlaying ->\n  [false] The sim is paused while the\n  *[true] The\n} { $mode ->\n  [manual] wrench clamped to the string is near the { $wrenchPosition ->\n      [bottom] bottom\n      *[middle] middle\n      [top] top\n    } of the play area\n  *[other] { $mode ->\n    [oscillate] oscillator\n    *[pulse] pulse generator\n  } is { $active ->\n    [true] generating a { $mode ->\n      [oscillate] wave\n      *[pulse] pulse\n    } that begins with { $amplitude ->\n      [zero] zero\n      [low] low\n      [medium] medium\n      *[high] high\n    } amplitude and\n    { $mode ->\n      [oscillate] { $frequency ->\n        [zero] zero\n        [low] low\n        [medium] medium\n        *[high] high\n      } frequency\n      *[pulse] { $pulseWidth ->\n        [low] low\n        [medium] medium\n        *[high] high\n      } pulse width\n    }\n    *[false] stationary \n  } in the play area\n}, and the string is { $isStill ->\n  *[true] still\n  [false] in motion\n}."
        },
        "end": {
          "value": "The end of the string { $endPosition ->\n  *[fixed] is fixed to a clamp.\n  [loose] is attached to a ring that moves along a rod.\n  [no] extends out to infinity through a window outside.\n}"
        }
      },
      "interactionHint": {
        "value": "{ $mode ->\n  [manual] Move the wrench or choose another way to start making waves.\n  [oscillate] Start the oscillator or choose another way to start making waves.\n  *[pulse] Start a pulse or choose another way to start making waves.\n}"
      }
    },
    "headings": {
      "playArea": {
        "activeMeasurementTools": {
          "value": "Active Measurement Tools"
        },
        "activeMeasurementToolsDescription": {
          "value": "Tools to visually measure properties of waves. Pause the sim to help make precise measurements."
        },
        "waveAndStringProperties": {
          "value": "Wave and String Properties"
        },
        "waveAndStringPropertiesDescription": {
          "value": "Controls to change the properties of the generated wave and the string."
        }
      },
      "controlArea": {
        "measurementTools": {
          "value": "Measurement Tools"
        },
        "measurementToolsDescription": {
          "value": "Tools to visually measure properties of waves. Pause the sim to help make precise measurements."
        }
      }
    },
    "waveMode": {
      "accessibleName": {
        "value": "Wave Generation Options"
      },
      "accessibleHelpText": {
        "value": "Create wave manually, continuously, or with individual pulses."
      },
      "manual": {
        "accessibleName": {
          "value": "Manual"
        }
      },
      "oscillate": {
        "accessibleName": {
          "value": "Oscillate"
        }
      },
      "pulse": {
        "accessibleName": {
          "value": "Pulse"
        }
      }
    },
    "endMode": {
      "accessibleName": {
        "value": "String End Options"
      },
      "accessibleHelpText": {
        "value": "Set attachment for the end of the string."
      },
      "fixedEnd": {
        "accessibleName": {
          "value": "Fixed End"
        }
      },
      "looseEnd": {
        "accessibleName": {
          "value": "Loose End"
        }
      },
      "noEnd": {
        "accessibleName": {
          "value": "No End"
        }
      }
    },
    "wrench": {
      "accessibleName": {
        "value": "Wrench"
      },
      "accessibleHelpText": {
        "value": "Move the wrench up and down to drag the string and make a wave."
      }
    },
    "pulseGenerator": {
      "accessibleName": {
        "value": "Pulse Generator"
      },
      "accessibleHelpText": {
        "value": "Create a single wave pulse along the string."
      }
    },
    "restartButton": {
      "accessibleHelpText": {
        "value": "Reset string position to flat."
      }
    },
    "horizontalRuler": {
      "accessibleName": {
        "value": "Horizontal Ruler"
      },
      "accessibleHelpText": {
        "value": "Drag ruler to line up and visually measure wave length."
      }
    },
    "verticalRuler": {
      "accessibleName": {
        "value": "Vertical Ruler"
      },
      "accessibleHelpText": {
        "value": "Drag ruler to line up and visually measure wave amplitude."
      }
    },
    "referenceLine": {
      "accessibleName": {
        "value": "Reference Line"
      },
      "accessibleHelpText": {
        "value": "Move handle and visually line up with waves to compare amplitude changes."
      }
    },
    "amplitudeControl": {
      "accessibleHelpText": {
        "value": "Wave height from crest to trough."
      }
    },
    "frequencyControl": {
      "accessibleHelpText": {
        "value": "Wave cycles per second."
      }
    },
    "pulseWidthControl": {
      "accessibleHelpText": {
        "value": "Width of the generated pulse in seconds."
      }
    },
    "dampingControl": {
      "accessibleHelpText": {
        "value": "Amount of energy lost to the environment."
      }
    },
    "tensionControl": {
      "accessibleHelpText": {
        "value": "Amount the string is stretched."
      }
    },
    "visibilityControls": {
      "rulers": {
        "accessibleHelpText": {
          "value": "Vertical and horizontal rulers to measure distance."
        },
        "accessibleContextResponse": {
          "value": "Rulers { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      },
      "stopwatch": {
        "accessibleHelpText": {
          "value": "Measure elapsed time."
        },
        "accessibleContextResponse": {
          "value": "Stopwatch { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      },
      "referenceLine": {
        "accessibleHelpText": {
          "value": "Movable dashed laser line to visually line up with waves to compare amplitude changes."
        },
        "accessibleContextResponse": {
          "value": "Reference line { $isVisible ->\n  [true] added.\n  *[false] removed.\n}"
        }
      }
    },
    "keyboardHelpDialog": {
      "restartString": {
        "description": {
          "value": "Reset Shape with { $altOrOption } plus Shift plus R."
        }
      }
    }
  }
}
# Strings for the Wave on a String simulation.
# After changing this file, run `grunt modulify --targets=strings` to regenerate the appropriate files, including type definitions.

wave-on-a-string.title:            Wave on a String
rulers:                            Rulers
timer:                             Stopwatch
amplitude:                         Amplitude
frequency:                         Frequency
pulseWidth:                        Pulse Width
damping:                           Damping
tension:                           Tension
low:                               Low
high:                              High
manual:                            Manual
oscillate:                         Oscillate
pulse:                             Pulse
restart:                           Restart String
fixedEnd:                          Fixed End
looseEnd:                          Loose End
noEnd:                             No End
speedNormal:                       Normal
speedSlow:                         Slow Motion
referenceLine:                     Reference Line
unitCm:                            cm
patternValueUnitHz:                "{0} Hz"
patternValueUnitCm:                "{0} cm"
patternValueUnitS:                 "{0} s"
patternValueUnitPercentage:        "{0}%"

keyboardHelpDialog.stringControls: String Controls

a11y:
  screenSummary:
    playArea:        >-
                     Explore the physical properties of waves by manipulating a string that tightly stretches across the play area.
                     Move the string yourself with a wrench, use a continuous oscillator, or pulse the string to generate waves. 
                     Every wave mode provides different options to tune the strings' properties and motion, which affects the waves you create and observe.
                     Discover the effect of changing how the end of the string attaches to the end of the play area or allow it to extend infinitely.
    controlArea:     Several tools are available to support measurements of different properties of the resulting waves.
    interactionHint: |-
                     { $mode ->
                       [manual] Move the wrench or choose another way to start making waves.
                       [oscillate] Start the oscillator or choose another way to start making waves.
                       *[pulse] Start a pulse or choose another way to start making waves.
                     }

  headings:
    playArea:
      waveGeneration:                     Wave Generation
      activeMeasurementTools:             Active Measurement Tools
      activeMeasurementToolsDescription:  Tools to visually measure properties of waves. Pause the sim to help make precise measurements.
      waveAndStringProperties:            Wave and String Properties
      waveAndStringPropertiesDescription: Controls to change the properties of the generated wave and the string.
    controlArea:
      measurementTools:            Measurement Tools
      measurementToolsDescription: Tools to visually measure properties of waves. Pause the sim to help make precise measurements.

  valuePatterns:
    centimeters: "{ $value } centimeters"
    hertz:       "{ $value } hertz"
    seconds:     "{ $value } seconds"
    percentage:  "{ $value } percent"

  waveGeneration:
    start: |-
           Currently, the { $mode ->
             [manual] wrench clamped to the string is near the { $wrenchPosition ->
                 [bottom] bottom
                 *[middle] middle
                 [top] top
               } of the play area
             *[other] { $mode ->
               [oscillate] oscillator
               *[pulse] pulse generator
             } is { $active ->
               [true] generating a { $mode ->
                 [oscillate] sinusoidal wave
                 *[pulse] triangular pulse
               } that begins with { $amplitude ->
                 [zero] zero
                 [low] low
                 [medium] medium
                 *[high] high
               } amplitude and
               { $mode ->
                 [oscillate] { $frequency ->
                   [zero] zero
                   [low] low
                   [medium] medium
                   *[high] high
                 } frequency
                 *[pulse] { $pulseWidth ->
                   [low] narrow
                   [medium] medium
                   *[high] wide
                 } pulse width
               }
               *[false] stationary 
             } in the play area
           }, and the string is { $isStill ->
             *[true] still and flat
             [false] in motion
           }.
    end:   |-
           The end of the string { $endPosition ->
             *[fixed] is fixed to a clamp.
             [loose] is attached to a ring that moves along a rod.
             [no] extends out to infinity through a window outside.
           }

  waveMode:
    accessibleName:     Wave Mode
    accessibleHelpText: Create wave manually, continuously, or with individual pulses.
    manual:
      accessibleName: Manual
    oscillate:
      accessibleName: Oscillate
    pulse:
      accessibleName: Pulse
  endMode:
    accessibleName:     String End Type
    accessibleHelpText: Set attachment for the end of the string.
    fixedEnd:
      accessibleName: Fixed End
    looseEnd:
      accessibleName: Loose End
    noEnd:
      accessibleName: No End
  string:
    stillContextResponse: String still.
  wrench:
    accessibleName:     Wrench
    accessibleHelpText: Move the wrench up and down to drag the string and make a wave.
  pulseGenerator:
    accessibleName:     Pulse Generator
    accessibleHelpText: Create a single triangular wave pulse along the string.
  restartButton:
    accessibleHelpText: Reset string position to still and flat.
  horizontalRuler:
    accessibleName:     Horizontal Ruler
    accessibleHelpText: Drag ruler to line up and visually measure wave length.
  verticalRuler:
    accessibleName:     Vertical Ruler
    accessibleHelpText: Drag ruler to line up and visually measure wave amplitude.
  referenceLine:
    accessibleName:     Reference Line
    accessibleHelpText: Move handle and visually line up with waves to compare amplitude changes.
  amplitudeControl:
    accessibleHelpText: Wave height from crest to trough.
  frequencyControl:
    accessibleHelpText: Wave cycles per second.
  pulseWidthControl:
    accessibleHelpText: Width of the generated pulse in seconds.
  dampingControl:
    accessibleHelpText: Amount of energy lost to the environment.
  tensionControl:
    accessibleHelpText: Amount the string is stretched.
  visibilityControls:
    rulers:
      accessibleHelpText:        Vertical and horizontal rulers to measure distance.
      accessibleContextResponse: |-
                                 Rulers { $isVisible ->
                                   [true] added.
                                   *[false] removed.
                                 }
    stopwatch:
      accessibleHelpText:        Stopwatch to measure elapsed time.
      accessibleContextResponse: |-
                                 Stopwatch { $isVisible ->
                                   [true] added.
                                   *[false] removed.
                                 }
    referenceLine:
      accessibleHelpText:        Movable dashed laser line to visually line up with waves to compare amplitude changes.
      accessibleContextResponse: |-
                                 Reference line { $isVisible ->
                                   [true] added.
                                   *[false] removed.
                                 }
  keyboardHelpDialog:
    restartString:
      description: Reset String with { $altOrOption } plus Shift plus R.
